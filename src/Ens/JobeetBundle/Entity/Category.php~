<?php

namespace Ens\JobeetBundle\Entity;

use Doctrine\ORM\Mapping as ORM; 
use Ens\JobeetBundle\Utils\Jobeet;

/**
 * @ORM\Entity
 * @ORM\HasLifecycleCallbacks
 */
class Category
{
    /**
     * @var integer $id
     */
    private $id;

    /**
     * @var string $name
     */
    private $name;

    /**
     * @var Ens\JobeetBundle\Entity\Job
     */
    private $jobs;

    /**
     * @var Ens\JobeetBundle\Entity\CategoryAffiliate
     */
    private $category_affiliates;
    
    private $active_jobs;
    
    private $more_jobs;

    public function __construct()
    {
        $this->jobs = new \Doctrine\Common\Collections\ArrayCollection();
    $this->category_affiliates = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Add jobs
     *
     * @param Ens\JobeetBundle\Entity\Job $jobs
     */
    public function addJob(\Ens\JobeetBundle\Entity\Job $jobs)
    {
        $this->jobs[] = $jobs;
    }

    /**
     * Get jobs
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getJobs()
    {
        return $this->jobs;
    }

    /**
     * Add category_affiliates
     *
     * @param Ens\JobeetBundle\Entity\CategoryAffiliate $categoryAffiliates
     */
    public function addCategoryAffiliate(\Ens\JobeetBundle\Entity\CategoryAffiliate $categoryAffiliates)
    {
        $this->category_affiliates[] = $categoryAffiliates;
    }

    /**
     * Get category_affiliates
     *
     * @return Doctrine\Common\Collections\Collection 
     */
    public function getCategoryAffiliates()
    {
        return $this->category_affiliates;
    }
    /**
     * to string Object
     *
     * @return string
     */
    public function __toString()
    {         
      return $this->getName()?$this->getName():'';
    }
    
    public function setActiveJobs($jobs)
    {
      $this->active_jobs = $jobs;
    }
    
    public function getActiveJobs()
    {
      return $this->active_jobs;
    }
 
  /* public function getActiveJobs($category_id = null, $max = null)
    {
      $qb = $this->createQueryBuilder('j')
        ->where('j.expires_at > :date')
        ->setParameter('date', date('Y-m-d H:i:s', time()))
        ->orderBy('j.expires_at', 'DESC');   
     
      if($max)
      {
        $qb->setMaxResults($max);
      }
     
      if($category_id)
      {
        $qb->andWhere('j.category = :category_id')
           ->setParameter('category_id', $category_id);
      }
     
      $query = $qb->getQuery();
     
      return $query->getResult();
    } */  
    
      
    
    public function setMoreJobs($jobs)
    {
      $this->more_jobs = $jobs >=  0 ? $jobs : 0;
    }
     
    public function getMoreJobs()
    {
      return $this->more_jobs;
    }
    /**
     * @var string $slug
     */
    private $slug;


    /**
     * Set slug
     *
     * @param string $slug
     */
    public function setSlug($slug)
    {
        $this->slug = $slug;
    }
    /**
    * Get slug
    *
    * @return string
    */
    public function getSlug()
    {
        return $this->slug;
    }  
    /**
     * @ORM\PrePersist
     */
    public function setSlugValue()
    {
        $this->slug = Jobeet::slugify($this->getName());
    }

    /**
     * Remove jobs
     *
     * @param \Ens\JobeetBundle\Entity\Job $jobs
     */
    public function removeJob(\Ens\JobeetBundle\Entity\Job $jobs)
    {
        $this->jobs->removeElement($jobs);
    }

    /**
     * Remove category_affiliates
     *
     * @param \Ens\JobeetBundle\Entity\CategoryAffiliate $categoryAffiliates
     */
    public function removeCategoryAffiliate(\Ens\JobeetBundle\Entity\CategoryAffiliate $categoryAffiliates)
    {
        $this->category_affiliates->removeElement($categoryAffiliates);
    }
}